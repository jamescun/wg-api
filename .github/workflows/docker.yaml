name: Docker

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - '*'

permissions:
  contents: read
  packages: write

env:
  APP_VERSION: ${{ github.ref_type  == 'tag' && github.ref_name || github.sha }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME || github.repository }}
  IMAGE_PLATFORMS: ${{ vars.IMAGE_PLATFORMS || 'linux/amd64,linux/arm64' }}
  REGISTRY: ${{ vars.REGISTRY_NAME || secrets.REGISTRY_NAME || 'ghcr.io' }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/docker/login-action
      - uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || github.token }}

      # https://github.com/docker/setup-buildx-action
      - uses: docker/setup-buildx-action@v3

      # https://github.com/docker/setup-qemu-action
      - uses: docker/setup-qemu-action@v3

      # https://github.com/docker/metadata-action
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # https://github.com/docker/build-push-action
      - uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          platforms: ${{ env.IMAGE_PLATFORMS }}
          build-args: VERSION=${{ env.APP_VERSION }}
